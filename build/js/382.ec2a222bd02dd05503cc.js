"use strict";(self.webpackChunkrate=self.webpackChunkrate||[]).push([[382],{3382:(e,t,n)=>{n.r(t),n.d(t,{default:()=>te});var r,a,i=n(5893),o=n(7294),s=n(595),c=n(3031),u=n(7007),d=n(4807),l=n(2264),A=$RefreshSig$(),f=function(){return f=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},f.apply(this,arguments)},p=A((0,o.memo)(r=A((function(e){var t,n;A();var r=e.currencyRecentRate,a=e.currencyName,p=e.currencyYesterdayRate,m=(0,u.v9)(s.tH),h=(0,o.useMemo)((function(){return(r-p)/p*100}),[r,p]);return(0,i.jsxs)("li",f({className:(0,d.A)(l.Z.RecentRate,[],(t={},t[l.Z.top]="rub"===a.abbr||"eur"===a.abbr||"usd"===a.abbr||"gbp"===a.abbr,t))},{children:[(0,i.jsxs)("div",f({className:l.Z.first},{children:[(0,i.jsx)("p",{children:"".concat(a.description)}),(0,i.jsxs)("span",{children:[" ",a.abbr.toUpperCase()]})]})),(0,i.jsx)("p",f({className:(0,d.A)(l.Z.second,[],(n={},n[l.Z.positive]=h>=0,n[l.Z.negative]=h<0,n)),"data-text":(0,c.t)("rateOfChangePerDay")},{children:"".concat(h>=0?"+":"").concat(h.toFixed(2),"%")})),(0,i.jsx)("p",f({className:l.Z.third},{children:"".concat((1/r).toFixed(2)," ").concat(null==m?void 0:m.abbr.toUpperCase())}))]}))}),"im/4VG0OaGx7SzHJSFtqhiW8DJ4=",!1,(function(){return[u.v9]}))),"im/4VG0OaGx7SzHJSFtqhiW8DJ4=",!1,(function(){return[u.v9]}));a=p,$RefreshReg$(r,"RecentRate$memo"),$RefreshReg$(a,"RecentRate");var m,h,R=n(4221),v=function(e){var t;return null===(t=e.recentRates)||void 0===t?void 0:t.data},y=function(e){var t;return null===(t=e.recentRates)||void 0===t?void 0:t.inputValue},g=function(e){var t;return null===(t=e.recentRates)||void 0===t?void 0:t.recentRates},x=function(e){var t;return null===(t=e.recentRates)||void 0===t?void 0:t.yesterdayRates},C=function(e){var t;return null===(t=e.recentRates)||void 0===t?void 0:t.recentRatesDate},b=$RefreshSig$(),w=b((0,o.memo)(m=b((function(e){b();var t=e.currencyList,n=e.recentRates,r=e.yesterdayRates,a=(0,u.v9)(y),s=(0,o.useMemo)((function(){return t&&a?new R.Z(t,{keys:["abbr","description"]}).search(a).map((function(e){return e.item})):t}),[t,a]);return(0,i.jsx)("ul",{children:null==s?void 0:s.map((function(e){return(0,i.jsx)(p,{currencyRecentRate:n[e.abbr],currencyYesterdayRate:r[e.abbr],currencyName:e},e.description)}))})}),"LxFsn5/VZHzEQYmyTsybP1qZvBM=",!1,(function(){return[u.v9]}))),"LxFsn5/VZHzEQYmyTsybP1qZvBM=",!1,(function(){return[u.v9]}));h=w,$RefreshReg$(m,"RecentRatesList$memo"),$RefreshReg$(h,"RecentRatesList");var _,D,M=n(7296),E=n(1302),T=n(2179),B=n(5443),F=n(7168),j=/d{1,4}|D{3,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|W{1,2}|[LlopSZN]|"[^"]*"|'[^']*'/g,N=/\b(?:[A-Z]{1,3}[A-Z][TC])(?:[-+]\d{4})?|((?:Australian )?(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time)\b/g,S=/[^-+\dA-Z]/g,Z={default:"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",paddedShortDate:"mm/dd/yyyy",mediumDate:"mmm d, yyyy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",shortTime:"h:MM TT",mediumTime:"h:MM:ss TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:sso",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",expiresHeaderFormat:"ddd, dd mmm yyyy HH:MM:ss Z"},$={dayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"],timeNames:["a","p","am","pm","A","P","AM","PM"]},P=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return String(e).padStart(t,"0")},W=function(e){var t=e.y,n=e.m,r=e.d,a=e._,i=e.dayName,o=e.short,s=void 0!==o&&o,c=new Date,u=new Date;u.setDate(u[a+"Date"]()-1);var d=new Date;return d.setDate(d[a+"Date"]()+1),c[a+"FullYear"]()===t&&c[a+"Month"]()===n&&c[a+"Date"]()===r?s?"Tdy":"Today":u[a+"FullYear"]()===t&&u[a+"Month"]()===n&&u[a+"Date"]()===r?s?"Ysd":"Yesterday":d[a+"FullYear"]()===t&&d[a+"Month"]()===n&&d[a+"Date"]()===r?s?"Tmw":"Tomorrow":i},k=function(e){var t=new Date(e.getFullYear(),e.getMonth(),e.getDate());t.setDate(t.getDate()-(t.getDay()+6)%7+3);var n=new Date(t.getFullYear(),0,4);n.setDate(n.getDate()-(n.getDay()+6)%7+3);var r=t.getTimezoneOffset()-n.getTimezoneOffset();t.setHours(t.getHours()-r);var a=(t-n)/6048e5;return 1+Math.floor(a)},O=function(e){var t=e.getDay();return 0===t&&(t=7),t},G=function(e){return(String(e).match(N)||[""]).pop().replace(S,"").replace(/GMT\+0000/g,"UTC")},I=(0,F.hg)("recentRates/fetchYesterdayRates",(function(e,t){var n,r,a,i,o=e.base,s=e.date,c=t.rejectWithValue,u=t.extra;return n=void 0,r=void 0,i=function(){var e,t,n;return function(e,t){var n,r,a,i,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){o.label=i[1];break}if(6===i[0]&&o.label<a[1]){o.label=a[1],a=i;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(i);break}a[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}(this,(function(r){switch(r.label){case 0:(e=new Date(s)).setDate(e.getDate()-1),t=function(e,t,n,r){if(1!==arguments.length||"string"!=typeof e||/\d/.test(e)||(t=e,e=void 0),(e=e||0===e?e:new Date)instanceof Date||(e=new Date(e)),isNaN(e))throw TypeError("Invalid date");var a=(t=String(Z[t]||t||Z.default)).slice(0,4);"UTC:"!==a&&"GMT:"!==a||(t=t.slice(4),n=!0,"GMT:"===a&&(r=!0));var i=function(){return n?"getUTC":"get"},o=function(){return e[i()+"Date"]()},s=function(){return e[i()+"Day"]()},c=function(){return e[i()+"Month"]()},u=function(){return e[i()+"FullYear"]()},d=function(){return e[i()+"Hours"]()},l=function(){return e[i()+"Minutes"]()},A=function(){return e[i()+"Seconds"]()},f=function(){return e[i()+"Milliseconds"]()},p=function(){return n?0:e.getTimezoneOffset()},m=function(){return k(e)},h=function(){return O(e)},R={d:function(){return o()},dd:function(){return P(o())},ddd:function(){return $.dayNames[s()]},DDD:function(){return W({y:u(),m:c(),d:o(),_:i(),dayName:$.dayNames[s()],short:!0})},dddd:function(){return $.dayNames[s()+7]},DDDD:function(){return W({y:u(),m:c(),d:o(),_:i(),dayName:$.dayNames[s()+7]})},m:function(){return c()+1},mm:function(){return P(c()+1)},mmm:function(){return $.monthNames[c()]},mmmm:function(){return $.monthNames[c()+12]},yy:function(){return String(u()).slice(2)},yyyy:function(){return P(u(),4)},h:function(){return d()%12||12},hh:function(){return P(d()%12||12)},H:function(){return d()},HH:function(){return P(d())},M:function(){return l()},MM:function(){return P(l())},s:function(){return A()},ss:function(){return P(A())},l:function(){return P(f(),3)},L:function(){return P(Math.floor(f()/10))},t:function(){return d()<12?$.timeNames[0]:$.timeNames[1]},tt:function(){return d()<12?$.timeNames[2]:$.timeNames[3]},T:function(){return d()<12?$.timeNames[4]:$.timeNames[5]},TT:function(){return d()<12?$.timeNames[6]:$.timeNames[7]},Z:function(){return r?"GMT":n?"UTC":G(e)},o:function(){return(p()>0?"-":"+")+P(100*Math.floor(Math.abs(p())/60)+Math.abs(p())%60,4)},p:function(){return(p()>0?"-":"+")+P(Math.floor(Math.abs(p())/60),2)+":"+P(Math.floor(Math.abs(p())%60),2)},S:function(){return["th","st","nd","rd"][o()%10>3?0:(o()%100-o()%10!=10)*o()%10]},W:function(){return m()},WW:function(){return P(m())},N:function(){return h()}};return t.replace(j,(function(e){return e in R?R[e]():e.slice(1,e.length-1)}))}(e,"isoDate"),r.label=1;case 1:return r.trys.push([1,3,,4]),[4,u.api.get("/".concat(t,"/currencies/").concat(o,".min.json"))];case 2:if(!(n=r.sent()).data)throw new Error;return[2,Object.values(n.data)[1]];case 3:return r.sent(),[2,c("error")];case 4:return[2]}}))},new((a=void 0)||(a=Promise))((function(e,t){function o(e){try{c(i.next(e))}catch(e){t(e)}}function s(e){try{c(i.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(o,s)}c((i=i.apply(n,r||[])).next())}))})),z=(0,F.oM)({name:"resentRates",initialState:{data:[],inputValue:"",isLoading:!1,recentRatesDate:"",errorMessage:"",yesterdayRates:void 0,recentRates:void 0},reducers:{setInputValue:function(e,t){var n=t.payload;e.inputValue=n},setRecentRatesDate:function(e,t){var n=t.payload;e.recentRatesDate=n}},extraReducers:function(e){e.addCase(s.$X.pending,(function(e){e.errorMessage="",e.isLoading=!0})).addCase(s.$X.fulfilled,(function(e,t){var n=t.payload;e.data=n.sort((function(e){return"rub"===e.abbr||"eur"===e.abbr||"usd"===e.abbr||"gbp"===e.abbr?-1:1})),e.errorMessage="",e.isLoading=!1})).addCase(s.$X.rejected,(function(e,t){var n=t.payload;e.errorMessage=n,e.isLoading=!1})).addCase(L.pending,(function(e){e.errorMessage="",e.isLoading=!0})).addCase(L.fulfilled,(function(e,t){var n=t.payload;e.recentRates=n,e.errorMessage="",e.isLoading=!1})).addCase(L.rejected,(function(e,t){var n=t.payload;e.errorMessage=n,e.isLoading=!1})).addCase(I.pending,(function(e){e.errorMessage="",e.isLoading=!0})).addCase(I.fulfilled,(function(e,t){var n=t.payload;e.yesterdayRates=n,e.errorMessage="",e.isLoading=!1})).addCase(I.rejected,(function(e,t){var n=t.payload;e.errorMessage=n,e.isLoading=!1}))}}),H=z.actions,Y=z.reducer,L=(0,F.hg)("recentRates/fetchRecentRates",(function(e,t){var n,r,a,i,o=e.base,s=t.rejectWithValue,c=t.extra,u=t.dispatch;return n=void 0,r=void 0,i=function(){var e,t;return function(e,t){var n,r,a,i,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){o.label=i[1];break}if(6===i[0]&&o.label<a[1]){o.label=a[1],a=i;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(i);break}a[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,c.api.get("/latest/currencies/".concat(o,".min.json"))];case 1:if(!(e=n.sent()).data)throw new Error;return t=Object.values(e.data),u(H.setRecentRatesDate(t[0])),[2,t[1]];case 2:return n.sent(),[2,s("error")];case 3:return[2]}}))},new((a=void 0)||(a=Promise))((function(e,t){function o(e){try{c(i.next(e))}catch(e){t(e)}}function s(e){try{c(i.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(o,s)}c((i=i.apply(n,r||[])).next())}))})),J=n(1971),U=$RefreshSig$(),V=function(){return V=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},V.apply(this,arguments)},q={recentRates:Y},X=U((0,o.memo)(_=U((function(){U();var e=(0,B.$)().t,t=(0,E.T)(),n=(0,u.v9)(v),r=(0,u.v9)(g),a=(0,u.v9)(x),c=(0,u.v9)(C),l=(0,u.v9)(s.tH),A=(0,u.v9)(y);(0,o.useEffect)((function(){t((0,s.$X)()),t(s.W3.setDefaultBaseCurrentCurrency()),t(L({base:null==l?void 0:l.abbr})),t(I({base:null==l?void 0:l.abbr,date:c}))}),[null==l?void 0:l.abbr,t,c]);var f=(0,o.useCallback)((function(e){t(H.setInputValue(e))}),[t]);return(0,i.jsx)(M.T,V({reducers:q},{children:(0,i.jsxs)("section",V({className:"content"},{children:[(0,i.jsxs)("div",V({className:J.Z.choseInput},{children:[(0,i.jsxs)("div",V({className:J.Z.header},{children:[(0,i.jsx)("h3",V({className:J.Z.label},{children:e("searchCur")})),(0,i.jsx)("div",V({className:(0,d.A)(J.Z.input,["input"])},{children:(0,i.jsx)(T.I,{placeholder:e("search"),value:A,onChange:f})}))]})),(0,i.jsxs)("div",{children:[(0,i.jsx)("h3",V({className:J.Z.label},{children:e("choseBaseCurrency")})),(0,i.jsx)(s.p1,{currencyList:n,currentCurrency:l})]})]})),(0,i.jsx)(w,{currencyList:n,recentRates:r,yesterdayRates:a})]}))}))}),"SxgQfZXXzr7nwVdzgpxazoQVvBg=",!1,(function(){return[B.$,E.T,u.v9,u.v9,u.v9,u.v9,u.v9,u.v9]}))),"SxgQfZXXzr7nwVdzgpxazoQVvBg=",!1,(function(){return[B.$,E.T,u.v9,u.v9,u.v9,u.v9,u.v9,u.v9]}));D=X,$RefreshReg$(_,"RecentRates$memo"),$RefreshReg$(D,"RecentRates");var Q=n(7322),K=function(){return K=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},K.apply(this,arguments)},ee=(0,o.memo)(ne=function(){return(0,i.jsx)("div",K({className:Q.Z.RatesPage},{children:(0,i.jsx)(X,{})}))});re=ee;const te=ee;var ne,re;$RefreshReg$(ne,"RatesPage$memo"),$RefreshReg$(re,"RatesPage")},8639:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n(7537),a=n.n(r),i=n(3645),o=n.n(i)()(a());o.push([e.id,'.src-entities-recentRate-ui-RecentRate-module__RecentRate--XcGbu{display:flex;flex-wrap:wrap;justify-content:space-between;margin-bottom:10px;padding:10px 20px;font-size:18px;list-style:none;background-color:var(--elem-bg-color);border-radius:5px;box-shadow:var(--box-shadow);cursor:default}@media screen and (max-width: 800px){.src-entities-recentRate-ui-RecentRate-module__RecentRate--XcGbu{justify-content:center;font-size:16px}}.src-entities-recentRate-ui-RecentRate-module__first--an1F1{display:flex;width:260px}.src-entities-recentRate-ui-RecentRate-module__first--an1F1 p{max-width:250px;margin-right:10px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.src-entities-recentRate-ui-RecentRate-module__first--an1F1 span{color:var(--active-color)}@media screen and (max-width: 800px){.src-entities-recentRate-ui-RecentRate-module__first--an1F1{justify-content:center;width:316px;margin-bottom:10px}}@media screen and (max-width: 600px){.src-entities-recentRate-ui-RecentRate-module__first--an1F1{width:280px}}@media screen and (max-width: 400px){.src-entities-recentRate-ui-RecentRate-module__first--an1F1{width:240px}}.src-entities-recentRate-ui-RecentRate-module__second--MyplD{position:relative;width:60px;font-weight:600;text-align:center}.src-entities-recentRate-ui-RecentRate-module__second--MyplD::after,.src-entities-recentRate-ui-RecentRate-module__second--MyplD::before{position:absolute;opacity:0;transition:all .1s linear;pointer-events:none}.src-entities-recentRate-ui-RecentRate-module__second--MyplD::after{top:-30px;right:-85px;width:220px;height:26px;color:var(--rate-hover-color);font-weight:400;font-size:16px;text-align:center;background-color:var(--rate-hover-bg-color);border-radius:5px;content:attr(data-text)}.src-entities-recentRate-ui-RecentRate-module__second--MyplD::before{top:-4px;right:20px;border-color:var(--rate-hover-bg-color) rgba(0,0,0,0) rgba(0,0,0,0);border-style:solid;border-width:7px 6px 0;content:""}.src-entities-recentRate-ui-RecentRate-module__second--MyplD:hover::after,.src-entities-recentRate-ui-RecentRate-module__second--MyplD:hover::before{opacity:.9;pointer-events:auto}@media screen and (max-width: 800px){.src-entities-recentRate-ui-RecentRate-module__second--MyplD{width:125px}}@media screen and (max-width: 400px){.src-entities-recentRate-ui-RecentRate-module__second--MyplD{width:100px}}.src-entities-recentRate-ui-RecentRate-module__positive--EXPPw{color:var(--positive-number-color)}.src-entities-recentRate-ui-RecentRate-module__negative--ebAO6{color:var(--negative-number-color)}.src-entities-recentRate-ui-RecentRate-module__third--O9mpg{width:130px;text-align:right}@media screen and (max-width: 800px){.src-entities-recentRate-ui-RecentRate-module__third--O9mpg{text-align:center}}.src-entities-recentRate-ui-RecentRate-module__top--vW6yY{padding:15px 20px;font-weight:600;font-size:20px;box-shadow:0 0 5px 0 #000}.src-entities-recentRate-ui-RecentRate-module__top--vW6yY .src-entities-recentRate-ui-RecentRate-module__first--an1F1{font-weight:500}.src-entities-recentRate-ui-RecentRate-module__top--vW6yY .src-entities-recentRate-ui-RecentRate-module__second--MyplD{font-weight:700}@media screen and (max-width: 800px){.src-entities-recentRate-ui-RecentRate-module__top--vW6yY{font-size:18px}.src-entities-recentRate-ui-RecentRate-module__top--vW6yY .src-entities-recentRate-ui-RecentRate-module__second--MyplD{font-weight:600}}',"",{version:3,sources:["webpack://./src/entities/recentRate/ui/RecentRate.module.scss"],names:[],mappings:"AAAA,iEACE,YAAA,CACA,cAAA,CACA,6BAAA,CACA,kBAAA,CACA,iBAAA,CAEA,cAAA,CAEA,eAAA,CACA,qCAAA,CACA,iBAAA,CACA,4BAAA,CACA,cAAA,CAEA,qCAfF,iEAgBI,sBAAA,CAEA,cAAA,CAAA,CAIJ,4DACE,YAAA,CACA,WAAA,CAEA,8DACE,eAAA,CACA,iBAAA,CAEA,eAAA,CAEA,kBAAA,CAEA,sBAAA,CAGF,iEACE,yBAAA,CAGF,qCAnBF,4DAoBI,sBAAA,CACA,WAAA,CACA,kBAAA,CAAA,CAGF,qCAzBF,4DA0BI,WAAA,CAAA,CAGF,qCA7BF,4DA8BI,WAAA,CAAA,CAIJ,6DACE,iBAAA,CAEA,UAAA,CAEA,eAAA,CAEA,iBAAA,CAEA,yIAEE,iBAAA,CAEA,SAAA,CAEA,yBAAA,CAEA,mBAAA,CAGF,oEACE,SAAA,CACA,WAAA,CAEA,WAAA,CACA,WAAA,CAEA,6BAAA,CACA,eAAA,CACA,cAAA,CACA,iBAAA,CAEA,2CAAA,CAEA,iBAAA,CAEA,uBAAA,CAGF,qEACE,QAAA,CACA,UAAA,CAEA,mEAAA,CACA,kBAAA,CACA,sBAAA,CAEA,UAAA,CAGF,qJAEE,UAAA,CAEA,mBAAA,CAGF,qCAzDF,6DA0DI,WAAA,CAAA,CAGF,qCA7DF,6DA8DI,WAAA,CAAA,CAIJ,+DACE,kCAAA,CAGF,+DACE,kCAAA,CAGF,4DACE,WAAA,CAEA,gBAAA,CAEA,qCALF,4DAMI,iBAAA,CAAA,CAIJ,0DACE,iBAAA,CAEA,eAAA,CACA,cAAA,CAEA,yBAAA,CAEA,sHACE,eAAA,CAGF,uHACE,eAAA,CAGF,qCAhBF,0DAiBI,cAAA,CAEA,uHACE,eAAA,CAAA",sourcesContent:[".RecentRate {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n  padding: 10px 20px;\r\n\r\n  font-size: 18px;\r\n\r\n  list-style: none;\r\n  background-color: var(--elem-bg-color);\r\n  border-radius: 5px;\r\n  box-shadow: var(--box-shadow);\r\n  cursor: default;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    justify-content: center;\r\n\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\n.first {\r\n  display: flex;\r\n  width: 260px;\r\n\r\n  p {\r\n    max-width: 250px;\r\n    margin-right: 10px;\r\n\r\n    overflow: hidden;\r\n\r\n    white-space: nowrap;\r\n\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  span {\r\n    color: var(--active-color);\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    justify-content: center;\r\n    width: 316px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 280px;\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    width: 240px;\r\n  }\r\n}\r\n\r\n.second {\r\n  position: relative;\r\n\r\n  width: 60px;\r\n\r\n  font-weight: 600;\r\n\r\n  text-align: center;\r\n\r\n  &::after,\r\n  &::before {\r\n    position: absolute;\r\n\r\n    opacity: 0;\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    pointer-events: none;\r\n  }\r\n\r\n  &::after {\r\n    top: -30px;\r\n    right: -85px;\r\n\r\n    width: 220px;\r\n    height: 26px;\r\n\r\n    color: var(--rate-hover-color);\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    text-align: center;\r\n\r\n    background-color: var(--rate-hover-bg-color);\r\n\r\n    border-radius: 5px;\r\n\r\n    content: attr(data-text);\r\n  }\r\n\r\n  &::before {\r\n    top: -4px;\r\n    right: 20px;\r\n\r\n    border-color: var(--rate-hover-bg-color) transparent transparent;\r\n    border-style: solid;\r\n    border-width: 7px 6px 0;\r\n\r\n    content: '';\r\n  }\r\n\r\n  &:hover::after,\r\n  &:hover::before {\r\n    opacity: 0.9;\r\n\r\n    pointer-events: auto;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 125px;\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    width: 100px;\r\n  }\r\n}\r\n\r\n.positive {\r\n  color: var(--positive-number-color);\r\n}\r\n\r\n.negative {\r\n  color: var(--negative-number-color);\r\n}\r\n\r\n.third {\r\n  width: 130px;\r\n\r\n  text-align: right;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.top {\r\n  padding: 15px 20px;\r\n\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n\r\n  box-shadow: 0 0 5px 0 rgb(0 0 0);\r\n\r\n  .first {\r\n    font-weight: 500;\r\n  }\r\n\r\n  .second {\r\n    font-weight: 700;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n\r\n    .second {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n}\r\n"],sourceRoot:""}]),o.locals={RecentRate:"src-entities-recentRate-ui-RecentRate-module__RecentRate--XcGbu",first:"src-entities-recentRate-ui-RecentRate-module__first--an1F1",second:"src-entities-recentRate-ui-RecentRate-module__second--MyplD",positive:"src-entities-recentRate-ui-RecentRate-module__positive--EXPPw",negative:"src-entities-recentRate-ui-RecentRate-module__negative--ebAO6",third:"src-entities-recentRate-ui-RecentRate-module__third--O9mpg",top:"src-entities-recentRate-ui-RecentRate-module__top--vW6yY"};const s=o},4035:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n(7537),a=n.n(r),i=n(3645),o=n.n(i)()(a());o.push([e.id,".src-pages-ratesPage-ui-RatesPage-module__RatesPage--6W5pJ{color:var(--primary-color)}","",{version:3,sources:["webpack://./src/pages/ratesPage/ui/RatesPage.module.scss"],names:[],mappings:"AAAA,2DACE,0BAAA",sourcesContent:[".RatesPage {\r\n  color: var(--primary-color);\r\n}\r\n"],sourceRoot:""}]),o.locals={RatesPage:"src-pages-ratesPage-ui-RatesPage-module__RatesPage--6W5pJ"};const s=o},5220:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n(7537),a=n.n(r),i=n(3645),o=n.n(i)()(a());o.push([e.id,".src-widgets-RecentRates-ui-RecentRates-module__choseInput--OUbwZ{display:flex;flex-wrap:wrap;justify-content:space-between;margin-bottom:20px}@media screen and (max-width: 600px){.src-widgets-RecentRates-ui-RecentRates-module__choseInput--OUbwZ{justify-content:center}}.src-widgets-RecentRates-ui-RecentRates-module__label--OcBpe{margin-bottom:7px;font-weight:500;font-size:17px}.src-widgets-RecentRates-ui-RecentRates-module__input--VGoUs{width:280px;max-width:none;height:40px}","",{version:3,sources:["webpack://./src/widgets/RecentRates/ui/RecentRates.module.scss"],names:[],mappings:"AAAA,kEACE,YAAA,CACA,cAAA,CACA,6BAAA,CACA,kBAAA,CAEA,qCANF,kEAOI,sBAAA,CAAA,CAIJ,6DACE,iBAAA,CAEA,eAAA,CACA,cAAA,CAGF,6DACE,WAAA,CACA,cAAA,CACA,WAAA",sourcesContent:[".choseInput {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n.label {\r\n  margin-bottom: 7px;\r\n\r\n  font-weight: 500;\r\n  font-size: 17px;\r\n}\r\n\r\n.input {\r\n  width: 280px;\r\n  max-width: none;\r\n  height: 40px;\r\n}\r\n"],sourceRoot:""}]),o.locals={choseInput:"src-widgets-RecentRates-ui-RecentRates-module__choseInput--OUbwZ",label:"src-widgets-RecentRates-ui-RecentRates-module__label--OcBpe",input:"src-widgets-RecentRates-ui-RecentRates-module__input--VGoUs"};const s=o},2264:(e,t,n)=>{n.d(t,{Z:()=>g});var r=n(3379),a=n.n(r),i=n(7795),o=n.n(i),s=n(569),c=n.n(s),u=n(3565),d=n.n(u),l=n(9216),A=n.n(l),f=n(4589),p=n.n(f),m=n(8639),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=A();var R=a()(m.default,h);if(!m.default.locals||e.hot.invalidate){var v=!m.default.locals,y=v?m:m.default.locals;e.hot.accept(8639,(t=>{m=n(8639),function(e,t,n){if(!e&&t||e&&!t)return!1;var r;for(r in e)if((!n||"default"!==r)&&e[r]!==t[r])return!1;for(r in t)if(!(n&&"default"===r||e[r]))return!1;return!0}(y,v?m:m.default.locals,v)?(y=v?m:m.default.locals,R(m.default)):e.hot.invalidate()}))}e.hot.dispose((function(){R()}));const g=m.default&&m.default.locals?m.default.locals:void 0},7322:(e,t,n)=>{n.d(t,{Z:()=>g});var r=n(3379),a=n.n(r),i=n(7795),o=n.n(i),s=n(569),c=n.n(s),u=n(3565),d=n.n(u),l=n(9216),A=n.n(l),f=n(4589),p=n.n(f),m=n(4035),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=A();var R=a()(m.default,h);if(!m.default.locals||e.hot.invalidate){var v=!m.default.locals,y=v?m:m.default.locals;e.hot.accept(4035,(t=>{m=n(4035),function(e,t,n){if(!e&&t||e&&!t)return!1;var r;for(r in e)if((!n||"default"!==r)&&e[r]!==t[r])return!1;for(r in t)if(!(n&&"default"===r||e[r]))return!1;return!0}(y,v?m:m.default.locals,v)?(y=v?m:m.default.locals,R(m.default)):e.hot.invalidate()}))}e.hot.dispose((function(){R()}));const g=m.default&&m.default.locals?m.default.locals:void 0},1971:(e,t,n)=>{n.d(t,{Z:()=>g});var r=n(3379),a=n.n(r),i=n(7795),o=n.n(i),s=n(569),c=n.n(s),u=n(3565),d=n.n(u),l=n(9216),A=n.n(l),f=n(4589),p=n.n(f),m=n(5220),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=A();var R=a()(m.default,h);if(!m.default.locals||e.hot.invalidate){var v=!m.default.locals,y=v?m:m.default.locals;e.hot.accept(5220,(t=>{m=n(5220),function(e,t,n){if(!e&&t||e&&!t)return!1;var r;for(r in e)if((!n||"default"!==r)&&e[r]!==t[r])return!1;for(r in t)if(!(n&&"default"===r||e[r]))return!1;return!0}(y,v?m:m.default.locals,v)?(y=v?m:m.default.locals,R(m.default)):e.hot.invalidate()}))}e.hot.dispose((function(){R()}));const g=m.default&&m.default.locals?m.default.locals:void 0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,